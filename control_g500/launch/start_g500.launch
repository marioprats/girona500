<launch>
	<arg name="enableUWSim" value="false" />
	<arg name="disableShaders" value="false" />
	
	<!-- Load simulation parameters -->
	<rosparam command="load" file="$(find underwater_vehicle_dynamics)/config/dynamics_g500.yaml" />
	<rosparam command="load" file="$(find control_g500)/config/thruster_allocator_sim.yaml" />
	<rosparam command="load" file="$(find control_g500)/config/velocity_controller_sim.yaml" />	
	

	<!-- Run dynamics -->		
	<node name="dynamics" pkg="underwater_vehicle_dynamics" type="dynamics.py" respawn="false"/>
	

	<group if="$(arg enableUWSim)">
		<group if="$(arg disableShaders)">
			<node name="UWSim" pkg="UWSim" type="UWSim" args="" respawn="false"/>
		</group>
		<group unless="$(arg disableShaders)">
			<node name="UWSim" pkg="UWSim" type="UWSim" respawn="false"/>
		</group>
	</group>
    	

	<!-- Run Control Stack -->
	<rosparam command="load" file="$(find control_g500)/config/joy_vel.yaml" />
	<node name="teleoperation" pkg="control_g500" type="teleoperation"/>
	<node name="thruster_allocator" pkg="control_g500" type="thruster_allocator.py"/>
	<node name="velocity_controller" pkg="control_g500" type="velocity_controller.py"/>
	<node name="merge_bvr" pkg="control_g500" type="merge_bvr.py"/>

	<!-- Run Navigation Stack -->
	<rosparam command="load" file="$(find navigation_g500)/config/navigator.yaml" />
	<node name="navigator" pkg="navigation_g500" type="navigator.py"/>


	<!-- Load Keyboard -->
	<node name="keyboard" pkg="control_g500" type="keyboard" />
    	
</launch>

